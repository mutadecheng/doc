Docker 容器使用
https://www.runoob.com/docker/docker-container-usage.html

 
#创建容器并运行(--restart=always 自动重启)
docker run --name=sers1.2.0 -p 10345:10345 -d --restart=always  sers1.2.0

#查询正在运行的容器
docker ps

#查看WEB应用程序容器的进程
docker top dotnet1.2.0

#重启容器
docker restart dotnet1.2.0

#查看启动日志
docker logs -f dotnet1.2.0

#在容器内执行命令行
docker exec -it dotnet1.2.0 /bin/sh

#运行容器，在断开后自动关闭并清理
docker run --rm -it busybox /bin/sh

---------------------------------------
#文件复制

#1、从容器拷贝文件到宿主机
docker cp registry-web:/opt/testnew/file.txt /opt/test/

#2、从宿主机拷贝文件到容器
docker cp /opt/test/file.txt registry-web:/opt/testnew/
 
 

---------------------------------------
(--name 容器名称，可自定义)
(--restart=always 自动重启)
(-v /etc/localtime:/etc/localtime)挂载宿主机localtime文件解决容器时间与主机时区不一致的问题
(-v $PWD/data:/data 将主机中当前目录下的data挂载到容器的/data)
(--net=host 网络直接使用宿主机网络)（-p 6022:6022 端口映射）
 
cd /root/docker/ServiceCenter

docker run --name=servicecenter --restart=always -d \
-p 4580:4580 -p 4501:4501 \
-v /etc/localtime:/etc/localtime \
-v $PWD/appsettings.json:/root/app/ServiceCenter/appsettings.json \
-v $PWD/Logs:/root/app/ServiceCenter/Logs \
-v $PWD/Data:/root/app/ServiceCenter/Data \
serset/servicecenter

---------------------------------------
#常用命令

#查看容器logs
docker logs app1

#在容器内执行命令行
docker exec -it app1 /bin/sh
docker exec -it app1 bash

#停止容器
docker stop app1

#打开容器
docker start app1

#重启容器
docker restart app1


#删除容器
docker rm app1 -f


---------------------------------------
docker安装时会产生一个叫docker 0的linux bridge（一个虚拟网桥）
不对--network参数进行指定的容器默认都会挂在这上面。通过bridge容器间可以进行网络连通


#查看网桥配置
docker network inspect bridge



#Command	Description
docker network connect	Connect a container to a network
docker network create	Create a network
docker network disconnect	Disconnect a container from a network
docker network inspect	Display detailed information on one or more networks
docker network ls		List networks
docker network prune	Remove all unused networks
docker network rm		Remove one or more networks

---------------------------------------
关于对docker run --link的理解
https://www.jianshu.com/p/21d66ca6115e
#  --link selenium_hub:hub
# selenium_hub 和 hub作为容器的hostname，node用这2个名字中的哪一个都可以访问

docker run -d --name node --link selenium_hub:hub selenium/node-chrome-debug
