# This is a basic workflow to help you get started with Actions

name: docker-dotnet_5.0-build

# Controls when the action will run. 
on:
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: build image
        run: |
           set -e

           echo "start build"
           export DOCKER_USERNAME="${{ secrets.DOCKER_USERNAME  }}"
           export DOCKER_PASSWORD="${{ secrets.DOCKER_PASSWORD }}"

           cd ./docker/dotnet/docker-image
           

           echo "(x.1)初始化构建器"
           #启用 buildx 插件
           export DOCKER_CLI_EXPERIMENTAL=enabled
           #启用 binfmt_misc
           docker run --rm --privileged docker/binfmt:66f9012c56a8316f9244ffd7622d7c21c1f6f28d
           #验证是 binfmt_misc 否开启
           ls -al /proc/sys/fs/binfmt_misc/
           #创建一个新的构建器
           docker buildx create --use --name mybuilder
           #启动构建器
           docker buildx inspect mybuilder --bootstrap
           
           
           echo "(x.2)登录"
           docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
           
           
           echo "(x.3)get version"
           version=`docker run -i --rm mcr.microsoft.com/dotnet/runtime:5.0 dotnet --info | grep Version`
           version=`echo ${version#*:} | sed 's/ //g'`
           echo $version
           
           
           echo "(x.4)构建镜像并推送到Docker Hub"
           
           cd dotnet_aspnet-5.0
           docker buildx build \
           -t serset/dotnet:aspnet-5.0 -t serset/dotnet:aspnet-$version \
           -t serset/dotnet:5.0 -t serset/dotnet:$version \
           --platform=linux/arm/v7,linux/arm64,linux/amd64 . --push
           cd ..
           
           
           cd dotnet_runtime-5.0
           docker buildx build -t serset/dotnet:runtime-5.0 -t serset/dotnet:runtime-$version --platform=linux/arm/v7,linux/arm64,linux/amd64 . --push
           cd ..
           
           
           cd dotnet_sdk-5.0
           docker buildx build -t serset/dotnet:sdk-5.0 -t serset/dotnet:sdk-$version --platform=linux/arm/v7,linux/arm64,linux/amd64 . --push
           cd ..
           
           echo "build succeed!"